import { BaseChildManager } from './baseChild.ts';
export class GuildChannelVoiceStatesManager extends BaseChildManager {
    channel;
    constructor(client, parent, channel){
        super(client, parent);
        this.channel = channel;
    }
    async get(id) {
        const res = await this.parent.get(id);
        if (res !== undefined && res.channel?.id === this.channel.id) return res;
        else return undefined;
    }
    async size() {
        return await this.client.cache.size(this.parent.cacheName, (d)=>d.channel_id === this.channel.id) ?? 0;
    }
    async array() {
        const arr = await this.parent.array();
        return arr.filter((c)=>c.channel?.id === this.channel.id);
    }
    async fromPayload(d) {
        for (const data of d){
            await this.set(data.user_id, data);
        }
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImh0dHBzOi8vZGVuby5sYW5kL3gvaGFybW9ueUB2Mi45LjAvc3JjL21hbmFnZXJzL2d1aWxkQ2hhbm5lbFZvaWNlU3RhdGVzLnRzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB0eXBlIHsgQ2xpZW50IH0gZnJvbSAnLi4vY2xpZW50L21vZC50cydcbmltcG9ydCB7IEJhc2VDaGlsZE1hbmFnZXIgfSBmcm9tICcuL2Jhc2VDaGlsZC50cydcbmltcG9ydCB0eXBlIHsgVm9pY2VTdGF0ZVBheWxvYWQgfSBmcm9tICcuLi90eXBlcy92b2ljZS50cydcbmltcG9ydCB7IFZvaWNlU3RhdGUgfSBmcm9tICcuLi9zdHJ1Y3R1cmVzL3ZvaWNlU3RhdGUudHMnXG5pbXBvcnQgeyBHdWlsZFZvaWNlU3RhdGVzTWFuYWdlciB9IGZyb20gJy4vZ3VpbGRWb2ljZVN0YXRlcy50cydcbmltcG9ydCB0eXBlIHsgVm9pY2VDaGFubmVsIH0gZnJvbSAnLi4vc3RydWN0dXJlcy9ndWlsZFZvaWNlQ2hhbm5lbC50cydcblxuZXhwb3J0IGNsYXNzIEd1aWxkQ2hhbm5lbFZvaWNlU3RhdGVzTWFuYWdlciBleHRlbmRzIEJhc2VDaGlsZE1hbmFnZXI8XG4gIFZvaWNlU3RhdGVQYXlsb2FkLFxuICBWb2ljZVN0YXRlXG4+IHtcbiAgY2hhbm5lbDogVm9pY2VDaGFubmVsXG5cbiAgY29uc3RydWN0b3IoXG4gICAgY2xpZW50OiBDbGllbnQsXG4gICAgcGFyZW50OiBHdWlsZFZvaWNlU3RhdGVzTWFuYWdlcixcbiAgICBjaGFubmVsOiBWb2ljZUNoYW5uZWxcbiAgKSB7XG4gICAgc3VwZXIoY2xpZW50LCBwYXJlbnQpXG4gICAgdGhpcy5jaGFubmVsID0gY2hhbm5lbFxuICB9XG5cbiAgYXN5bmMgZ2V0KGlkOiBzdHJpbmcpOiBQcm9taXNlPFZvaWNlU3RhdGUgfCB1bmRlZmluZWQ+IHtcbiAgICBjb25zdCByZXMgPSBhd2FpdCB0aGlzLnBhcmVudC5nZXQoaWQpXG4gICAgaWYgKHJlcyAhPT0gdW5kZWZpbmVkICYmIHJlcy5jaGFubmVsPy5pZCA9PT0gdGhpcy5jaGFubmVsLmlkKSByZXR1cm4gcmVzXG4gICAgZWxzZSByZXR1cm4gdW5kZWZpbmVkXG4gIH1cblxuICBhc3luYyBzaXplKCk6IFByb21pc2U8bnVtYmVyPiB7XG4gICAgcmV0dXJuIChcbiAgICAgIChhd2FpdCB0aGlzLmNsaWVudC5jYWNoZS5zaXplKFxuICAgICAgICB0aGlzLnBhcmVudC5jYWNoZU5hbWUsXG4gICAgICAgIChkOiBWb2ljZVN0YXRlUGF5bG9hZCkgPT4gZC5jaGFubmVsX2lkID09PSB0aGlzLmNoYW5uZWwuaWRcbiAgICAgICkpID8/IDBcbiAgICApXG4gIH1cblxuICBhc3luYyBhcnJheSgpOiBQcm9taXNlPFZvaWNlU3RhdGVbXT4ge1xuICAgIGNvbnN0IGFyciA9IChhd2FpdCB0aGlzLnBhcmVudC5hcnJheSgpKSBhcyBWb2ljZVN0YXRlW11cbiAgICByZXR1cm4gYXJyLmZpbHRlcigoYykgPT4gYy5jaGFubmVsPy5pZCA9PT0gdGhpcy5jaGFubmVsLmlkKVxuICB9XG5cbiAgYXN5bmMgZnJvbVBheWxvYWQoZDogVm9pY2VTdGF0ZVBheWxvYWRbXSk6IFByb21pc2U8dm9pZD4ge1xuICAgIGZvciAoY29uc3QgZGF0YSBvZiBkKSB7XG4gICAgICBhd2FpdCB0aGlzLnNldChkYXRhLnVzZXJfaWQsIGRhdGEpXG4gICAgfVxuICB9XG59XG4iXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQ0EsU0FBUyxnQkFBZ0IsUUFBUSxpQkFBZ0I7QUFNakQsT0FBTyxNQUFNLHVDQUF1QztJQUlsRCxRQUFxQjtJQUVyQixZQUNFLE1BQWMsRUFDZCxNQUErQixFQUMvQixPQUFxQixDQUNyQjtRQUNBLEtBQUssQ0FBQyxRQUFRO1FBQ2QsSUFBSSxDQUFDLE9BQU8sR0FBRztJQUNqQjtJQUVBLE1BQU0sSUFBSSxFQUFVLEVBQW1DO1FBQ3JELE1BQU0sTUFBTSxNQUFNLElBQUksQ0FBQyxNQUFNLENBQUMsR0FBRyxDQUFDO1FBQ2xDLElBQUksUUFBUSxhQUFhLElBQUksT0FBTyxFQUFFLE9BQU8sSUFBSSxDQUFDLE9BQU8sQ0FBQyxFQUFFLEVBQUUsT0FBTzthQUNoRSxPQUFPO0lBQ2Q7SUFFQSxNQUFNLE9BQXdCO1FBQzVCLE9BQ0UsQUFBQyxNQUFNLElBQUksQ0FBQyxNQUFNLENBQUMsS0FBSyxDQUFDLElBQUksQ0FDM0IsSUFBSSxDQUFDLE1BQU0sQ0FBQyxTQUFTLEVBQ3JCLENBQUMsSUFBeUIsRUFBRSxVQUFVLEtBQUssSUFBSSxDQUFDLE9BQU8sQ0FBQyxFQUFFLEtBQ3REO0lBRVY7SUFFQSxNQUFNLFFBQStCO1FBQ25DLE1BQU0sTUFBTyxNQUFNLElBQUksQ0FBQyxNQUFNLENBQUMsS0FBSztRQUNwQyxPQUFPLElBQUksTUFBTSxDQUFDLENBQUMsSUFBTSxFQUFFLE9BQU8sRUFBRSxPQUFPLElBQUksQ0FBQyxPQUFPLENBQUMsRUFBRTtJQUM1RDtJQUVBLE1BQU0sWUFBWSxDQUFzQixFQUFpQjtRQUN2RCxLQUFLLE1BQU0sUUFBUSxFQUFHO1lBQ3BCLE1BQU0sSUFBSSxDQUFDLEdBQUcsQ0FBQyxLQUFLLE9BQU8sRUFBRTtRQUMvQjtJQUNGO0FBQ0YsQ0FBQyJ9