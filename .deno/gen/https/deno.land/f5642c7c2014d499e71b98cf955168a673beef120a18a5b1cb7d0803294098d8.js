function cap(num, min, max) {
    return num < min ? min : num > max ? max : num;
}
function hueToRgb(p, q, t) {
    if (t < 0) t += 1;
    if (t > 1) t -= 1;
    if (t < 1 / 6) return p + (q - p) * 6 * t;
    if (t < 1 / 2) return q;
    if (t < 2 / 3) return p + (q - p) * (2 / 3 - t) * 6;
    return p;
}
// https://stackoverflow.com/a/9493060/12101923
export function hslToRgb(h, s, l) {
    // Convert to 0-1 range
    h = cap(h, 0, 360) / 360;
    s = cap(s, 0, 100) / 100;
    l = cap(l, 0, 100) / 100;
    let r, g, b;
    if (s == 0) {
        r = g = b = l;
    } else {
        const q = l < 0.5 ? l * (1 + s) : l + s - l * s;
        const p = 2 * l - q;
        r = hueToRgb(p, q, h + 1 / 3);
        g = hueToRgb(p, q, h);
        b = hueToRgb(p, q, h - 1 / 3);
    }
    return [
        Math.round(r * 255),
        Math.round(g * 255),
        Math.round(b * 255)
    ];
}
export function maybeHSL(k) {
    if (typeof k === "string") {
        const match = k.match(/^hsla?\((\d+), *(\d+)%, *(\d+)%(, *([\d\.]+))?\)$/);
        if (match !== null) {
            const h = Number(match[1]);
            const s = Number(match[2]);
            const l = Number(match[3]);
            const a = k.startsWith("hsla") && match[5] ? Number(match[5]) : undefined;
            k = "rgb";
            if (a !== undefined) {
                k += "a";
            }
            k += "(";
            const [r, g, b] = hslToRgb(h, s, l);
            k += r + ", ";
            k += g + ", ";
            k += b;
            if (a !== undefined) {
                k += ", " + a;
            }
            k += ")";
        }
    }
    return k;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImh0dHBzOi8vZGVuby5sYW5kL3gvY2FudmFzQHYxLjQuMS9zcmMvY29sb3JfdXRpbC50cyJdLCJzb3VyY2VzQ29udGVudCI6WyJmdW5jdGlvbiBjYXAobnVtOiBudW1iZXIsIG1pbjogbnVtYmVyLCBtYXg6IG51bWJlcikge1xuICByZXR1cm4gbnVtIDwgbWluID8gbWluIDogbnVtID4gbWF4ID8gbWF4IDogbnVtO1xufVxuXG5mdW5jdGlvbiBodWVUb1JnYihwOiBudW1iZXIsIHE6IG51bWJlciwgdDogbnVtYmVyKSB7XG4gIGlmICh0IDwgMCkgdCArPSAxO1xuICBpZiAodCA+IDEpIHQgLT0gMTtcbiAgaWYgKHQgPCAxIC8gNikgcmV0dXJuIHAgKyAocSAtIHApICogNiAqIHQ7XG4gIGlmICh0IDwgMSAvIDIpIHJldHVybiBxO1xuICBpZiAodCA8IDIgLyAzKSByZXR1cm4gcCArIChxIC0gcCkgKiAoMiAvIDMgLSB0KSAqIDY7XG4gIHJldHVybiBwO1xufVxuXG4vLyBodHRwczovL3N0YWNrb3ZlcmZsb3cuY29tL2EvOTQ5MzA2MC8xMjEwMTkyM1xuZXhwb3J0IGZ1bmN0aW9uIGhzbFRvUmdiKGg6IG51bWJlciwgczogbnVtYmVyLCBsOiBudW1iZXIpIHtcbiAgLy8gQ29udmVydCB0byAwLTEgcmFuZ2VcbiAgaCA9IGNhcChoLCAwLCAzNjApIC8gMzYwO1xuICBzID0gY2FwKHMsIDAsIDEwMCkgLyAxMDA7XG4gIGwgPSBjYXAobCwgMCwgMTAwKSAvIDEwMDtcblxuICBsZXQgciwgZywgYjtcblxuICBpZiAocyA9PSAwKSB7XG4gICAgciA9IGcgPSBiID0gbDtcbiAgfSBlbHNlIHtcbiAgICBjb25zdCBxID0gbCA8IDAuNSA/IGwgKiAoMSArIHMpIDogbCArIHMgLSBsICogcztcbiAgICBjb25zdCBwID0gMiAqIGwgLSBxO1xuICAgIHIgPSBodWVUb1JnYihwLCBxLCBoICsgMSAvIDMpO1xuICAgIGcgPSBodWVUb1JnYihwLCBxLCBoKTtcbiAgICBiID0gaHVlVG9SZ2IocCwgcSwgaCAtIDEgLyAzKTtcbiAgfVxuXG4gIHJldHVybiBbTWF0aC5yb3VuZChyICogMjU1KSwgTWF0aC5yb3VuZChnICogMjU1KSwgTWF0aC5yb3VuZChiICogMjU1KV07XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBtYXliZUhTTChrOiBzdHJpbmcpIHtcbiAgaWYgKHR5cGVvZiBrID09PSBcInN0cmluZ1wiKSB7XG4gICAgY29uc3QgbWF0Y2ggPSBrLm1hdGNoKC9eaHNsYT9cXCgoXFxkKyksICooXFxkKyklLCAqKFxcZCspJSgsICooW1xcZFxcLl0rKSk/XFwpJC8pO1xuXG4gICAgaWYgKG1hdGNoICE9PSBudWxsKSB7XG4gICAgICBjb25zdCBoID0gTnVtYmVyKG1hdGNoWzFdKTtcbiAgICAgIGNvbnN0IHMgPSBOdW1iZXIobWF0Y2hbMl0pO1xuICAgICAgY29uc3QgbCA9IE51bWJlcihtYXRjaFszXSk7XG4gICAgICBjb25zdCBhID0gay5zdGFydHNXaXRoKFwiaHNsYVwiKSAmJiBtYXRjaFs1XSA/IE51bWJlcihtYXRjaFs1XSkgOiB1bmRlZmluZWQ7XG5cbiAgICAgIGsgPSBcInJnYlwiO1xuICAgICAgaWYgKGEgIT09IHVuZGVmaW5lZCkge1xuICAgICAgICBrICs9IFwiYVwiO1xuICAgICAgfVxuICAgICAgayArPSBcIihcIjtcblxuICAgICAgY29uc3QgW3IsIGcsIGJdID0gaHNsVG9SZ2IoaCwgcywgbCk7XG4gICAgICBrICs9IHIgKyBcIiwgXCI7XG4gICAgICBrICs9IGcgKyBcIiwgXCI7XG4gICAgICBrICs9IGI7XG5cbiAgICAgIGlmIChhICE9PSB1bmRlZmluZWQpIHtcbiAgICAgICAgayArPSBcIiwgXCIgKyBhO1xuICAgICAgfVxuXG4gICAgICBrICs9IFwiKVwiO1xuICAgIH1cbiAgfVxuXG4gIHJldHVybiBrO1xufVxuIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLFNBQVMsSUFBSSxHQUFXLEVBQUUsR0FBVyxFQUFFLEdBQVcsRUFBRTtJQUNsRCxPQUFPLE1BQU0sTUFBTSxNQUFNLE1BQU0sTUFBTSxNQUFNLEdBQUc7QUFDaEQ7QUFFQSxTQUFTLFNBQVMsQ0FBUyxFQUFFLENBQVMsRUFBRSxDQUFTLEVBQUU7SUFDakQsSUFBSSxJQUFJLEdBQUcsS0FBSztJQUNoQixJQUFJLElBQUksR0FBRyxLQUFLO0lBQ2hCLElBQUksSUFBSSxJQUFJLEdBQUcsT0FBTyxJQUFJLENBQUMsSUFBSSxDQUFDLElBQUksSUFBSTtJQUN4QyxJQUFJLElBQUksSUFBSSxHQUFHLE9BQU87SUFDdEIsSUFBSSxJQUFJLElBQUksR0FBRyxPQUFPLElBQUksQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLElBQUksSUFBSSxDQUFDLElBQUk7SUFDbEQsT0FBTztBQUNUO0FBRUEsK0NBQStDO0FBQy9DLE9BQU8sU0FBUyxTQUFTLENBQVMsRUFBRSxDQUFTLEVBQUUsQ0FBUyxFQUFFO0lBQ3hELHVCQUF1QjtJQUN2QixJQUFJLElBQUksR0FBRyxHQUFHLE9BQU87SUFDckIsSUFBSSxJQUFJLEdBQUcsR0FBRyxPQUFPO0lBQ3JCLElBQUksSUFBSSxHQUFHLEdBQUcsT0FBTztJQUVyQixJQUFJLEdBQUcsR0FBRztJQUVWLElBQUksS0FBSyxHQUFHO1FBQ1YsSUFBSSxJQUFJLElBQUk7SUFDZCxPQUFPO1FBQ0wsTUFBTSxJQUFJLElBQUksTUFBTSxJQUFJLENBQUMsSUFBSSxDQUFDLElBQUksSUFBSSxJQUFJLElBQUksQ0FBQztRQUMvQyxNQUFNLElBQUksSUFBSSxJQUFJO1FBQ2xCLElBQUksU0FBUyxHQUFHLEdBQUcsSUFBSSxJQUFJO1FBQzNCLElBQUksU0FBUyxHQUFHLEdBQUc7UUFDbkIsSUFBSSxTQUFTLEdBQUcsR0FBRyxJQUFJLElBQUk7SUFDN0IsQ0FBQztJQUVELE9BQU87UUFBQyxLQUFLLEtBQUssQ0FBQyxJQUFJO1FBQU0sS0FBSyxLQUFLLENBQUMsSUFBSTtRQUFNLEtBQUssS0FBSyxDQUFDLElBQUk7S0FBSztBQUN4RSxDQUFDO0FBRUQsT0FBTyxTQUFTLFNBQVMsQ0FBUyxFQUFFO0lBQ2xDLElBQUksT0FBTyxNQUFNLFVBQVU7UUFDekIsTUFBTSxRQUFRLEVBQUUsS0FBSyxDQUFDO1FBRXRCLElBQUksVUFBVSxJQUFJLEVBQUU7WUFDbEIsTUFBTSxJQUFJLE9BQU8sS0FBSyxDQUFDLEVBQUU7WUFDekIsTUFBTSxJQUFJLE9BQU8sS0FBSyxDQUFDLEVBQUU7WUFDekIsTUFBTSxJQUFJLE9BQU8sS0FBSyxDQUFDLEVBQUU7WUFDekIsTUFBTSxJQUFJLEVBQUUsVUFBVSxDQUFDLFdBQVcsS0FBSyxDQUFDLEVBQUUsR0FBRyxPQUFPLEtBQUssQ0FBQyxFQUFFLElBQUksU0FBUztZQUV6RSxJQUFJO1lBQ0osSUFBSSxNQUFNLFdBQVc7Z0JBQ25CLEtBQUs7WUFDUCxDQUFDO1lBQ0QsS0FBSztZQUVMLE1BQU0sQ0FBQyxHQUFHLEdBQUcsRUFBRSxHQUFHLFNBQVMsR0FBRyxHQUFHO1lBQ2pDLEtBQUssSUFBSTtZQUNULEtBQUssSUFBSTtZQUNULEtBQUs7WUFFTCxJQUFJLE1BQU0sV0FBVztnQkFDbkIsS0FBSyxPQUFPO1lBQ2QsQ0FBQztZQUVELEtBQUs7UUFDUCxDQUFDO0lBQ0gsQ0FBQztJQUVELE9BQU87QUFDVCxDQUFDIn0=