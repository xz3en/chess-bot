export const guildMembersChunk = async (gateway, d)=>{
    const guild = await gateway.client.guilds.get(d.guild_id);
    // Weird case, shouldn't happen
    if (guild === undefined) return;
    for (const member of d.members){
        await guild.members.set(member.user.id, member);
        await gateway.client.users.set(member.user.id, member.user);
    }
    if (d.presences !== undefined) {
        for (const pres of d.presences){
            await guild.presences.set(pres.user.id, pres);
        }
    }
    gateway.client.emit('guildMembersChunk', guild, {
        members: d.members.map((m)=>m.user.id),
        presences: d.presences === undefined ? undefined : d.presences.map((p)=>p.user.id),
        chunkIndex: d.chunk_index,
        chunkCount: d.chunk_count
    });
    // Guild is now completely chunked. Emit an event for that.
    if (d.chunk_index >= d.chunk_count - 1) {
        gateway.client.emit('guildMembersChunked', guild, d.chunk_count);
    }
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImh0dHBzOi8vZGVuby5sYW5kL3gvaGFybW9ueUB2Mi45LjAvc3JjL2dhdGV3YXkvaGFuZGxlcnMvZ3VpbGRNZW1iZXJzQ2h1bmsudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHR5cGUgeyBHYXRld2F5LCBHYXRld2F5RXZlbnRIYW5kbGVyIH0gZnJvbSAnLi4vbW9kLnRzJ1xuaW1wb3J0IHsgR3VpbGQgfSBmcm9tICcuLi8uLi9zdHJ1Y3R1cmVzL2d1aWxkLnRzJ1xuaW1wb3J0IHsgR3VpbGRNZW1iZXJDaHVua1BheWxvYWQgfSBmcm9tICcuLi8uLi90eXBlcy9nYXRld2F5LnRzJ1xuXG5leHBvcnQgY29uc3QgZ3VpbGRNZW1iZXJzQ2h1bms6IEdhdGV3YXlFdmVudEhhbmRsZXIgPSBhc3luYyAoXG4gIGdhdGV3YXk6IEdhdGV3YXksXG4gIGQ6IEd1aWxkTWVtYmVyQ2h1bmtQYXlsb2FkXG4pID0+IHtcbiAgY29uc3QgZ3VpbGQ6IEd1aWxkIHwgdW5kZWZpbmVkID0gYXdhaXQgZ2F0ZXdheS5jbGllbnQuZ3VpbGRzLmdldChkLmd1aWxkX2lkKVxuICAvLyBXZWlyZCBjYXNlLCBzaG91bGRuJ3QgaGFwcGVuXG4gIGlmIChndWlsZCA9PT0gdW5kZWZpbmVkKSByZXR1cm5cblxuICBmb3IgKGNvbnN0IG1lbWJlciBvZiBkLm1lbWJlcnMpIHtcbiAgICBhd2FpdCBndWlsZC5tZW1iZXJzLnNldChtZW1iZXIudXNlci5pZCwgbWVtYmVyKVxuICAgIGF3YWl0IGdhdGV3YXkuY2xpZW50LnVzZXJzLnNldChtZW1iZXIudXNlci5pZCwgbWVtYmVyLnVzZXIpXG4gIH1cblxuICBpZiAoZC5wcmVzZW5jZXMgIT09IHVuZGVmaW5lZCkge1xuICAgIGZvciAoY29uc3QgcHJlcyBvZiBkLnByZXNlbmNlcykge1xuICAgICAgYXdhaXQgZ3VpbGQucHJlc2VuY2VzLnNldChwcmVzLnVzZXIuaWQsIHByZXMpXG4gICAgfVxuICB9XG5cbiAgZ2F0ZXdheS5jbGllbnQuZW1pdCgnZ3VpbGRNZW1iZXJzQ2h1bmsnLCBndWlsZCwge1xuICAgIG1lbWJlcnM6IGQubWVtYmVycy5tYXAoKG0pID0+IG0udXNlci5pZCksXG4gICAgcHJlc2VuY2VzOlxuICAgICAgZC5wcmVzZW5jZXMgPT09IHVuZGVmaW5lZCA/IHVuZGVmaW5lZCA6IGQucHJlc2VuY2VzLm1hcCgocCkgPT4gcC51c2VyLmlkKSxcbiAgICBjaHVua0luZGV4OiBkLmNodW5rX2luZGV4LFxuICAgIGNodW5rQ291bnQ6IGQuY2h1bmtfY291bnRcbiAgfSlcblxuICAvLyBHdWlsZCBpcyBub3cgY29tcGxldGVseSBjaHVua2VkLiBFbWl0IGFuIGV2ZW50IGZvciB0aGF0LlxuICBpZiAoZC5jaHVua19pbmRleCA+PSBkLmNodW5rX2NvdW50IC0gMSkge1xuICAgIGdhdGV3YXkuY2xpZW50LmVtaXQoJ2d1aWxkTWVtYmVyc0NodW5rZWQnLCBndWlsZCwgZC5jaHVua19jb3VudClcbiAgfVxufVxuIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUlBLE9BQU8sTUFBTSxvQkFBeUMsT0FDcEQsU0FDQSxJQUNHO0lBQ0gsTUFBTSxRQUEyQixNQUFNLFFBQVEsTUFBTSxDQUFDLE1BQU0sQ0FBQyxHQUFHLENBQUMsRUFBRSxRQUFRO0lBQzNFLCtCQUErQjtJQUMvQixJQUFJLFVBQVUsV0FBVztJQUV6QixLQUFLLE1BQU0sVUFBVSxFQUFFLE9BQU8sQ0FBRTtRQUM5QixNQUFNLE1BQU0sT0FBTyxDQUFDLEdBQUcsQ0FBQyxPQUFPLElBQUksQ0FBQyxFQUFFLEVBQUU7UUFDeEMsTUFBTSxRQUFRLE1BQU0sQ0FBQyxLQUFLLENBQUMsR0FBRyxDQUFDLE9BQU8sSUFBSSxDQUFDLEVBQUUsRUFBRSxPQUFPLElBQUk7SUFDNUQ7SUFFQSxJQUFJLEVBQUUsU0FBUyxLQUFLLFdBQVc7UUFDN0IsS0FBSyxNQUFNLFFBQVEsRUFBRSxTQUFTLENBQUU7WUFDOUIsTUFBTSxNQUFNLFNBQVMsQ0FBQyxHQUFHLENBQUMsS0FBSyxJQUFJLENBQUMsRUFBRSxFQUFFO1FBQzFDO0lBQ0YsQ0FBQztJQUVELFFBQVEsTUFBTSxDQUFDLElBQUksQ0FBQyxxQkFBcUIsT0FBTztRQUM5QyxTQUFTLEVBQUUsT0FBTyxDQUFDLEdBQUcsQ0FBQyxDQUFDLElBQU0sRUFBRSxJQUFJLENBQUMsRUFBRTtRQUN2QyxXQUNFLEVBQUUsU0FBUyxLQUFLLFlBQVksWUFBWSxFQUFFLFNBQVMsQ0FBQyxHQUFHLENBQUMsQ0FBQyxJQUFNLEVBQUUsSUFBSSxDQUFDLEVBQUUsQ0FBQztRQUMzRSxZQUFZLEVBQUUsV0FBVztRQUN6QixZQUFZLEVBQUUsV0FBVztJQUMzQjtJQUVBLDJEQUEyRDtJQUMzRCxJQUFJLEVBQUUsV0FBVyxJQUFJLEVBQUUsV0FBVyxHQUFHLEdBQUc7UUFDdEMsUUFBUSxNQUFNLENBQUMsSUFBSSxDQUFDLHVCQUF1QixPQUFPLEVBQUUsV0FBVztJQUNqRSxDQUFDO0FBQ0gsRUFBQyJ9