import { ChannelTypes } from '../types/channel.ts';
import { BaseChildManager } from './baseChild.ts';
export const ThreadTypes = [
    ChannelTypes.NEWS_THREAD,
    ChannelTypes.PRIVATE_THREAD,
    ChannelTypes.PUBLIC_THREAD
];
export class ThreadsManager extends BaseChildManager {
    constructor(client, parent){
        // it's not assignable but we're making sure it returns correct type
        // so i had to make ts to shut up
        super(client, parent);
    }
    async set(id, data) {
        if ('members' in data) {
            for (const member of data.members){
                await this.client.cache.set(`thread_members:${id}`, member.id, member);
            }
            data.members = undefined;
        }
        await super.set(id, data);
    }
    async get(id) {
        const res = await this.parent.get(id);
        if (res === undefined || !ThreadTypes.includes(res.type)) return undefined;
        else return res;
    }
    async array() {
        const arr = await this.parent.array();
        return arr.filter((e)=>ThreadTypes.includes(e.type));
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImh0dHBzOi8vZGVuby5sYW5kL3gvaGFybW9ueUB2Mi45LjAvc3JjL21hbmFnZXJzL3RocmVhZHMudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHR5cGUgeyBDbGllbnQgfSBmcm9tICcuLi9jbGllbnQvbW9kLnRzJ1xuaW1wb3J0IHtcbiAgQ2hhbm5lbFR5cGVzLFxuICBUaHJlYWRDaGFubmVsUGF5bG9hZCxcbiAgVGhyZWFkTWVtYmVyUGF5bG9hZFxufSBmcm9tICcuLi90eXBlcy9jaGFubmVsLnRzJ1xuaW1wb3J0IHsgVGhyZWFkQ2hhbm5lbCB9IGZyb20gJy4uL3N0cnVjdHVyZXMvdGhyZWFkQ2hhbm5lbC50cydcbmltcG9ydCB7IEJhc2VDaGlsZE1hbmFnZXIgfSBmcm9tICcuL2Jhc2VDaGlsZC50cydcbmltcG9ydCB7IEd1aWxkQ2hhbm5lbHNNYW5hZ2VyIH0gZnJvbSAnLi9ndWlsZENoYW5uZWxzLnRzJ1xuXG5leHBvcnQgY29uc3QgVGhyZWFkVHlwZXMgPSBbXG4gIENoYW5uZWxUeXBlcy5ORVdTX1RIUkVBRCxcbiAgQ2hhbm5lbFR5cGVzLlBSSVZBVEVfVEhSRUFELFxuICBDaGFubmVsVHlwZXMuUFVCTElDX1RIUkVBRFxuXVxuXG5leHBvcnQgY2xhc3MgVGhyZWFkc01hbmFnZXIgZXh0ZW5kcyBCYXNlQ2hpbGRNYW5hZ2VyPFxuICBUaHJlYWRDaGFubmVsUGF5bG9hZCxcbiAgVGhyZWFkQ2hhbm5lbFxuPiB7XG4gIGNvbnN0cnVjdG9yKGNsaWVudDogQ2xpZW50LCBwYXJlbnQ6IEd1aWxkQ2hhbm5lbHNNYW5hZ2VyKSB7XG4gICAgLy8gaXQncyBub3QgYXNzaWduYWJsZSBidXQgd2UncmUgbWFraW5nIHN1cmUgaXQgcmV0dXJucyBjb3JyZWN0IHR5cGVcbiAgICAvLyBzbyBpIGhhZCB0byBtYWtlIHRzIHRvIHNodXQgdXBcbiAgICBzdXBlcihjbGllbnQsIHBhcmVudCBhcyBhbnkpXG4gIH1cblxuICBhc3luYyBzZXQoXG4gICAgaWQ6IHN0cmluZyxcbiAgICBkYXRhOiBUaHJlYWRDaGFubmVsUGF5bG9hZCAmIHsgbWVtYmVycz86IFRocmVhZE1lbWJlclBheWxvYWRbXSB9XG4gICk6IFByb21pc2U8dm9pZD4ge1xuICAgIGlmICgnbWVtYmVycycgaW4gZGF0YSkge1xuICAgICAgZm9yIChjb25zdCBtZW1iZXIgb2YgZGF0YS5tZW1iZXJzIGFzIFRocmVhZE1lbWJlclBheWxvYWRbXSkge1xuICAgICAgICBhd2FpdCB0aGlzLmNsaWVudC5jYWNoZS5zZXQoYHRocmVhZF9tZW1iZXJzOiR7aWR9YCwgbWVtYmVyLmlkLCBtZW1iZXIpXG4gICAgICB9XG4gICAgICBkYXRhLm1lbWJlcnMgPSB1bmRlZmluZWRcbiAgICB9XG4gICAgYXdhaXQgc3VwZXIuc2V0KGlkLCBkYXRhKVxuICB9XG5cbiAgYXN5bmMgZ2V0KGlkOiBzdHJpbmcpOiBQcm9taXNlPFRocmVhZENoYW5uZWwgfCB1bmRlZmluZWQ+IHtcbiAgICBjb25zdCByZXMgPSBhd2FpdCB0aGlzLnBhcmVudC5nZXQoaWQpXG4gICAgaWYgKHJlcyA9PT0gdW5kZWZpbmVkIHx8ICFUaHJlYWRUeXBlcy5pbmNsdWRlcyhyZXMudHlwZSkpIHJldHVybiB1bmRlZmluZWRcbiAgICBlbHNlIHJldHVybiByZXNcbiAgfVxuXG4gIGFzeW5jIGFycmF5KCk6IFByb21pc2U8VGhyZWFkQ2hhbm5lbFtdPiB7XG4gICAgY29uc3QgYXJyID0gYXdhaXQgdGhpcy5wYXJlbnQuYXJyYXkoKVxuICAgIHJldHVybiBhcnIuZmlsdGVyKChlKSA9PiBUaHJlYWRUeXBlcy5pbmNsdWRlcyhlLnR5cGUpKVxuICB9XG59XG4iXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQ0EsU0FDRSxZQUFZLFFBR1Asc0JBQXFCO0FBRTVCLFNBQVMsZ0JBQWdCLFFBQVEsaUJBQWdCO0FBR2pELE9BQU8sTUFBTSxjQUFjO0lBQ3pCLGFBQWEsV0FBVztJQUN4QixhQUFhLGNBQWM7SUFDM0IsYUFBYSxhQUFhO0NBQzNCLENBQUE7QUFFRCxPQUFPLE1BQU0sdUJBQXVCO0lBSWxDLFlBQVksTUFBYyxFQUFFLE1BQTRCLENBQUU7UUFDeEQsb0VBQW9FO1FBQ3BFLGlDQUFpQztRQUNqQyxLQUFLLENBQUMsUUFBUTtJQUNoQjtJQUVBLE1BQU0sSUFDSixFQUFVLEVBQ1YsSUFBZ0UsRUFDakQ7UUFDZixJQUFJLGFBQWEsTUFBTTtZQUNyQixLQUFLLE1BQU0sVUFBVSxLQUFLLE9BQU8sQ0FBMkI7Z0JBQzFELE1BQU0sSUFBSSxDQUFDLE1BQU0sQ0FBQyxLQUFLLENBQUMsR0FBRyxDQUFDLENBQUMsZUFBZSxFQUFFLEdBQUcsQ0FBQyxFQUFFLE9BQU8sRUFBRSxFQUFFO1lBQ2pFO1lBQ0EsS0FBSyxPQUFPLEdBQUc7UUFDakIsQ0FBQztRQUNELE1BQU0sS0FBSyxDQUFDLEdBQUcsQ0FBQyxJQUFJO0lBQ3RCO0lBRUEsTUFBTSxJQUFJLEVBQVUsRUFBc0M7UUFDeEQsTUFBTSxNQUFNLE1BQU0sSUFBSSxDQUFDLE1BQU0sQ0FBQyxHQUFHLENBQUM7UUFDbEMsSUFBSSxRQUFRLGFBQWEsQ0FBQyxZQUFZLFFBQVEsQ0FBQyxJQUFJLElBQUksR0FBRyxPQUFPO2FBQzVELE9BQU87SUFDZDtJQUVBLE1BQU0sUUFBa0M7UUFDdEMsTUFBTSxNQUFNLE1BQU0sSUFBSSxDQUFDLE1BQU0sQ0FBQyxLQUFLO1FBQ25DLE9BQU8sSUFBSSxNQUFNLENBQUMsQ0FBQyxJQUFNLFlBQVksUUFBUSxDQUFDLEVBQUUsSUFBSTtJQUN0RDtBQUNGLENBQUMifQ==