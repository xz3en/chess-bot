export const inviteDelete = async (gateway, d)=>{
    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion
    const guild = await gateway.client.guilds.get(d.guild_id);
    // Weird case, shouldn't happen
    if (guild === undefined) return;
    const cachedInvite = await guild.invites.get(d.code);
    const cachedChannel = await gateway.client.channels.get(d.channel_id);
    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion
    const cachedGuild = await gateway.client.guilds.get(d.guild_id);
    if (cachedInvite === undefined) {
        const uncachedInvite = {
            guild: cachedGuild,
            channel: cachedChannel,
            code: d.code
        };
        return gateway.client.emit('inviteDeleteUncached', uncachedInvite);
    } else {
        await guild.invites._delete(d.code);
        gateway.client.emit('inviteDelete', cachedInvite);
    }
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImh0dHBzOi8vZGVuby5sYW5kL3gvaGFybW9ueUB2Mi45LjAvc3JjL2dhdGV3YXkvaGFuZGxlcnMvaW52aXRlRGVsZXRlLnRzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB0eXBlIHsgR2F0ZXdheSwgR2F0ZXdheUV2ZW50SGFuZGxlciB9IGZyb20gJy4uL21vZC50cydcbmltcG9ydCB7IEd1aWxkIH0gZnJvbSAnLi4vLi4vc3RydWN0dXJlcy9ndWlsZC50cydcbmltcG9ydCB7IEludml0ZURlbGV0ZVBheWxvYWQgfSBmcm9tICcuLi8uLi90eXBlcy9nYXRld2F5LnRzJ1xuaW1wb3J0IHsgUGFydGlhbEludml0ZVBheWxvYWQgfSBmcm9tICcuLi8uLi90eXBlcy9pbnZpdGUudHMnXG5pbXBvcnQgeyBDaGFubmVsIH0gZnJvbSAnLi4vLi4vc3RydWN0dXJlcy9jaGFubmVsLnRzJ1xuXG5leHBvcnQgY29uc3QgaW52aXRlRGVsZXRlOiBHYXRld2F5RXZlbnRIYW5kbGVyID0gYXN5bmMgKFxuICBnYXRld2F5OiBHYXRld2F5LFxuICBkOiBJbnZpdGVEZWxldGVQYXlsb2FkXG4pID0+IHtcbiAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIEB0eXBlc2NyaXB0LWVzbGludC9uby1ub24tbnVsbC1hc3NlcnRpb25cbiAgY29uc3QgZ3VpbGQ6IEd1aWxkIHwgdW5kZWZpbmVkID0gYXdhaXQgZ2F0ZXdheS5jbGllbnQuZ3VpbGRzLmdldChkLmd1aWxkX2lkISlcblxuICAvLyBXZWlyZCBjYXNlLCBzaG91bGRuJ3QgaGFwcGVuXG4gIGlmIChndWlsZCA9PT0gdW5kZWZpbmVkKSByZXR1cm5cblxuICBjb25zdCBjYWNoZWRJbnZpdGUgPSBhd2FpdCBndWlsZC5pbnZpdGVzLmdldChkLmNvZGUpXG4gIGNvbnN0IGNhY2hlZENoYW5uZWwgPSBhd2FpdCBnYXRld2F5LmNsaWVudC5jaGFubmVscy5nZXQoZC5jaGFubmVsX2lkKVxuICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgQHR5cGVzY3JpcHQtZXNsaW50L25vLW5vbi1udWxsLWFzc2VydGlvblxuICBjb25zdCBjYWNoZWRHdWlsZCA9IGF3YWl0IGdhdGV3YXkuY2xpZW50Lmd1aWxkcy5nZXQoZC5ndWlsZF9pZCEpXG5cbiAgaWYgKGNhY2hlZEludml0ZSA9PT0gdW5kZWZpbmVkKSB7XG4gICAgY29uc3QgdW5jYWNoZWRJbnZpdGU6IFBhcnRpYWxJbnZpdGVQYXlsb2FkID0ge1xuICAgICAgZ3VpbGQ6IGNhY2hlZEd1aWxkIGFzIHVua25vd24gYXMgR3VpbGQsXG4gICAgICBjaGFubmVsOiBjYWNoZWRDaGFubmVsIGFzIHVua25vd24gYXMgQ2hhbm5lbCxcbiAgICAgIGNvZGU6IGQuY29kZVxuICAgIH1cbiAgICByZXR1cm4gZ2F0ZXdheS5jbGllbnQuZW1pdCgnaW52aXRlRGVsZXRlVW5jYWNoZWQnLCB1bmNhY2hlZEludml0ZSlcbiAgfSBlbHNlIHtcbiAgICBhd2FpdCBndWlsZC5pbnZpdGVzLl9kZWxldGUoZC5jb2RlKVxuICAgIGdhdGV3YXkuY2xpZW50LmVtaXQoJ2ludml0ZURlbGV0ZScsIGNhY2hlZEludml0ZSlcbiAgfVxufVxuIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQU1BLE9BQU8sTUFBTSxlQUFvQyxPQUMvQyxTQUNBLElBQ0c7SUFDSCxvRUFBb0U7SUFDcEUsTUFBTSxRQUEyQixNQUFNLFFBQVEsTUFBTSxDQUFDLE1BQU0sQ0FBQyxHQUFHLENBQUMsRUFBRSxRQUFRO0lBRTNFLCtCQUErQjtJQUMvQixJQUFJLFVBQVUsV0FBVztJQUV6QixNQUFNLGVBQWUsTUFBTSxNQUFNLE9BQU8sQ0FBQyxHQUFHLENBQUMsRUFBRSxJQUFJO0lBQ25ELE1BQU0sZ0JBQWdCLE1BQU0sUUFBUSxNQUFNLENBQUMsUUFBUSxDQUFDLEdBQUcsQ0FBQyxFQUFFLFVBQVU7SUFDcEUsb0VBQW9FO0lBQ3BFLE1BQU0sY0FBYyxNQUFNLFFBQVEsTUFBTSxDQUFDLE1BQU0sQ0FBQyxHQUFHLENBQUMsRUFBRSxRQUFRO0lBRTlELElBQUksaUJBQWlCLFdBQVc7UUFDOUIsTUFBTSxpQkFBdUM7WUFDM0MsT0FBTztZQUNQLFNBQVM7WUFDVCxNQUFNLEVBQUUsSUFBSTtRQUNkO1FBQ0EsT0FBTyxRQUFRLE1BQU0sQ0FBQyxJQUFJLENBQUMsd0JBQXdCO0lBQ3JELE9BQU87UUFDTCxNQUFNLE1BQU0sT0FBTyxDQUFDLE9BQU8sQ0FBQyxFQUFFLElBQUk7UUFDbEMsUUFBUSxNQUFNLENBQUMsSUFBSSxDQUFDLGdCQUFnQjtJQUN0QyxDQUFDO0FBQ0gsRUFBQyJ9