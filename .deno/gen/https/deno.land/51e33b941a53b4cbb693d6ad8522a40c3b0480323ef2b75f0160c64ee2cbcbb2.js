import { Collection } from '../../utils/collection.ts';
export const threadListSync = async (gateway, d)=>{
    const guild = await gateway.client.guilds.get(d.guild_id);
    if (guild === undefined) return;
    const threads = new Collection();
    const members = new Collection();
    for (const data of d.threads){
        await guild.threads.set(data.id, data);
        threads.set(data.id, await guild.threads.get(data.id));
    }
    for (const data1 of d.members){
        const thread = threads.find((e)=>e.id === data1.id) ?? await guild.threads.get(data1.id);
        if (thread !== undefined) {
            await thread.members.set(data1.id, data1);
            members.set(data1.id, await thread.members.get(data1.id));
        }
    }
    const channels = new Collection();
    for (const id of d.channel_ids ?? []){
        const chan = await guild.channels.get(id);
        if (chan !== undefined) {
            channels.set(id, chan);
        }
    }
    gateway.client.emit('threadListSync', guild, threads, members, channels);
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImh0dHBzOi8vZGVuby5sYW5kL3gvaGFybW9ueUB2Mi45LjAvc3JjL2dhdGV3YXkvaGFuZGxlcnMvdGhyZWFkTGlzdFN5bmMudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHR5cGUgeyBHYXRld2F5LCBHYXRld2F5RXZlbnRIYW5kbGVyIH0gZnJvbSAnLi4vbW9kLnRzJ1xuaW1wb3J0IHR5cGUge1xuICBUaHJlYWRDaGFubmVsUGF5bG9hZCxcbiAgVGhyZWFkTWVtYmVyUGF5bG9hZFxufSBmcm9tICcuLi8uLi90eXBlcy9jaGFubmVsLnRzJ1xuaW1wb3J0IHsgVGhyZWFkQ2hhbm5lbCwgVGhyZWFkTWVtYmVyIH0gZnJvbSAnLi4vLi4vc3RydWN0dXJlcy90aHJlYWRDaGFubmVsLnRzJ1xuaW1wb3J0IHsgQ29sbGVjdGlvbiB9IGZyb20gJy4uLy4uL3V0aWxzL2NvbGxlY3Rpb24udHMnXG5pbXBvcnQgeyBHdWlsZFRleHRCYXNlZENoYW5uZWwgfSBmcm9tICcuLi8uLi9zdHJ1Y3R1cmVzL2d1aWxkVGV4dENoYW5uZWwudHMnXG5cbmV4cG9ydCBjb25zdCB0aHJlYWRMaXN0U3luYzogR2F0ZXdheUV2ZW50SGFuZGxlciA9IGFzeW5jIChcbiAgZ2F0ZXdheTogR2F0ZXdheSxcbiAgZDoge1xuICAgIGd1aWxkX2lkOiBzdHJpbmdcbiAgICBjaGFubmVsX2lkcz86IHN0cmluZ1tdXG4gICAgdGhyZWFkczogVGhyZWFkQ2hhbm5lbFBheWxvYWRbXVxuICAgIG1lbWJlcnM6IFRocmVhZE1lbWJlclBheWxvYWRbXVxuICB9XG4pID0+IHtcbiAgY29uc3QgZ3VpbGQgPSBhd2FpdCBnYXRld2F5LmNsaWVudC5ndWlsZHMuZ2V0KGQuZ3VpbGRfaWQpXG4gIGlmIChndWlsZCA9PT0gdW5kZWZpbmVkKSByZXR1cm5cblxuICBjb25zdCB0aHJlYWRzID0gbmV3IENvbGxlY3Rpb248c3RyaW5nLCBUaHJlYWRDaGFubmVsPigpXG4gIGNvbnN0IG1lbWJlcnMgPSBuZXcgQ29sbGVjdGlvbjxzdHJpbmcsIFRocmVhZE1lbWJlcj4oKVxuXG4gIGZvciAoY29uc3QgZGF0YSBvZiBkLnRocmVhZHMpIHtcbiAgICBhd2FpdCBndWlsZC50aHJlYWRzLnNldChkYXRhLmlkLCBkYXRhKVxuICAgIHRocmVhZHMuc2V0KGRhdGEuaWQsIChhd2FpdCBndWlsZC50aHJlYWRzLmdldChkYXRhLmlkKSkhKVxuICB9XG5cbiAgZm9yIChjb25zdCBkYXRhIG9mIGQubWVtYmVycykge1xuICAgIGNvbnN0IHRocmVhZCA9XG4gICAgICB0aHJlYWRzLmZpbmQoKGUpID0+IGUuaWQgPT09IGRhdGEuaWQpID8/XG4gICAgICAoYXdhaXQgZ3VpbGQudGhyZWFkcy5nZXQoZGF0YS5pZCkpXG4gICAgaWYgKHRocmVhZCAhPT0gdW5kZWZpbmVkKSB7XG4gICAgICBhd2FpdCB0aHJlYWQubWVtYmVycy5zZXQoZGF0YS5pZCwgZGF0YSlcbiAgICAgIG1lbWJlcnMuc2V0KGRhdGEuaWQsIChhd2FpdCB0aHJlYWQubWVtYmVycy5nZXQoZGF0YS5pZCkpISlcbiAgICB9XG4gIH1cblxuICBjb25zdCBjaGFubmVscyA9IG5ldyBDb2xsZWN0aW9uPHN0cmluZywgR3VpbGRUZXh0QmFzZWRDaGFubmVsPigpXG5cbiAgZm9yIChjb25zdCBpZCBvZiBkLmNoYW5uZWxfaWRzID8/IFtdKSB7XG4gICAgY29uc3QgY2hhbiA9IGF3YWl0IGd1aWxkLmNoYW5uZWxzLmdldChpZClcbiAgICBpZiAoY2hhbiAhPT0gdW5kZWZpbmVkKSB7XG4gICAgICBjaGFubmVscy5zZXQoaWQsIGNoYW4gYXMgdW5rbm93biBhcyBHdWlsZFRleHRCYXNlZENoYW5uZWwpXG4gICAgfVxuICB9XG5cbiAgZ2F0ZXdheS5jbGllbnQuZW1pdCgndGhyZWFkTGlzdFN5bmMnLCBndWlsZCwgdGhyZWFkcywgbWVtYmVycywgY2hhbm5lbHMpXG59XG4iXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBTUEsU0FBUyxVQUFVLFFBQVEsNEJBQTJCO0FBR3RELE9BQU8sTUFBTSxpQkFBc0MsT0FDakQsU0FDQSxJQU1HO0lBQ0gsTUFBTSxRQUFRLE1BQU0sUUFBUSxNQUFNLENBQUMsTUFBTSxDQUFDLEdBQUcsQ0FBQyxFQUFFLFFBQVE7SUFDeEQsSUFBSSxVQUFVLFdBQVc7SUFFekIsTUFBTSxVQUFVLElBQUk7SUFDcEIsTUFBTSxVQUFVLElBQUk7SUFFcEIsS0FBSyxNQUFNLFFBQVEsRUFBRSxPQUFPLENBQUU7UUFDNUIsTUFBTSxNQUFNLE9BQU8sQ0FBQyxHQUFHLENBQUMsS0FBSyxFQUFFLEVBQUU7UUFDakMsUUFBUSxHQUFHLENBQUMsS0FBSyxFQUFFLEVBQUcsTUFBTSxNQUFNLE9BQU8sQ0FBQyxHQUFHLENBQUMsS0FBSyxFQUFFO0lBQ3ZEO0lBRUEsS0FBSyxNQUFNLFNBQVEsRUFBRSxPQUFPLENBQUU7UUFDNUIsTUFBTSxTQUNKLFFBQVEsSUFBSSxDQUFDLENBQUMsSUFBTSxFQUFFLEVBQUUsS0FBSyxNQUFLLEVBQUUsS0FDbkMsTUFBTSxNQUFNLE9BQU8sQ0FBQyxHQUFHLENBQUMsTUFBSyxFQUFFO1FBQ2xDLElBQUksV0FBVyxXQUFXO1lBQ3hCLE1BQU0sT0FBTyxPQUFPLENBQUMsR0FBRyxDQUFDLE1BQUssRUFBRSxFQUFFO1lBQ2xDLFFBQVEsR0FBRyxDQUFDLE1BQUssRUFBRSxFQUFHLE1BQU0sT0FBTyxPQUFPLENBQUMsR0FBRyxDQUFDLE1BQUssRUFBRTtRQUN4RCxDQUFDO0lBQ0g7SUFFQSxNQUFNLFdBQVcsSUFBSTtJQUVyQixLQUFLLE1BQU0sTUFBTSxFQUFFLFdBQVcsSUFBSSxFQUFFLENBQUU7UUFDcEMsTUFBTSxPQUFPLE1BQU0sTUFBTSxRQUFRLENBQUMsR0FBRyxDQUFDO1FBQ3RDLElBQUksU0FBUyxXQUFXO1lBQ3RCLFNBQVMsR0FBRyxDQUFDLElBQUk7UUFDbkIsQ0FBQztJQUNIO0lBRUEsUUFBUSxNQUFNLENBQUMsSUFBSSxDQUFDLGtCQUFrQixPQUFPLFNBQVMsU0FBUztBQUNqRSxFQUFDIn0=